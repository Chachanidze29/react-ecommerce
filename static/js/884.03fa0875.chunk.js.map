{"version":3,"file":"static/js/884.03fa0875.chunk.js","mappings":"gIAQA,IANqB,SAAC,GAAD,IAAEA,EAAF,EAAEA,aAAaC,EAAf,EAAeA,SAAf,OACjB,mBAAQC,UAAU,uIACVC,QAASH,EADjB,SACgCC,M,6GCyCpC,UAtCgB,WAAM,IAAD,EACVG,GAAgBC,EAAAA,EAAAA,MAAhBD,aACP,GAA6BE,EAAAA,EAAAA,WAAS,GAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA6BF,EAAAA,EAAAA,UAAS,IAAtC,eAAOG,EAAP,KAAeC,EAAf,KACOC,GAAaC,EAAAA,EAAAA,MAAbD,UACAE,GAAgBC,EAAAA,EAAAA,MAAhBD,aASP,OAPAE,EAAAA,EAAAA,YAAU,WACNP,GAAW,GACX,IAAMQ,EAAOH,EAAaI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,GAAGC,aAAeT,KAChED,EAAWM,EAAK,IAChBR,GAAW,KACb,CAACG,EAAWE,KAGV,gBAAKX,UAAU,6CAAf,SAEQK,GAAU,SAAC,IAAD,KAGF,iBAAKL,UAAU,yCAAf,WACI,+BAAKO,QAAL,IAAKA,OAAL,EAAKA,EAASY,SACd,gBAAKC,IAAG,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAASc,MAAOrB,UAAU,eACpC,cAAGA,UAAU,OAAb,gBAAqBO,QAArB,IAAqBA,OAArB,EAAqBA,EAASe,eAC9B,iBAAKtB,UAAU,mCAAf,WACI,2CAAYO,QAAZ,IAAYA,GAAZ,UAAYA,EAASgB,cAArB,aAAY,EAAiBC,SAC7B,2CAAYjB,QAAZ,IAAYA,OAAZ,EAAYA,EAASkB,aAEzB,SAAC,IAAD,CAAc3B,aAAc,kBAAMI,GAAawB,EAAAA,EAAAA,IAAWnB,KAA1D,gC,6HCnC5B,IAOA,EAPyB,CACrBoB,SAAS,WACTC,YAAY,cACZC,WAAW,aACXC,WAAW,cCFFJ,EAAa,SAAAnB,GAAO,MAAK,CAClCwB,KAAKC,EAAAA,SACLC,QAAQ1B,IAGC2B,EAAa,SAAAzB,GAAS,MAAK,CACpCsB,KAAKC,EAAAA,YACLC,QAAQxB,IAGC0B,EAAY,SAAA1B,GAAS,MAAK,CACnCsB,KAAKC,EAAAA,WACLC,QAAQxB,IAGC2B,EAAY,iBAAO,CAC5BL,KAAKC,EAAAA","sources":["components/CustomButton.jsx","pages/Product.jsx","reducers/cart/cartActionTypes.js","reducers/cart/cartActions.js"],"sourcesContent":["import React from \"react\";\n\nconst CustomButton = ({clickHandler,children}) => (\n    <button className='p-2 mt-4 text-white bg-blue-500 rounded-lg w-28 border-2 border-transparent hover:border-blue-500 hover:text-blue-500 hover:bg-white'\n            onClick={clickHandler}>{children}\n    </button>\n)\n\nexport default CustomButton;","import {useEffect, useState} from 'react'\nimport Loader from '../components/Loader'\nimport {useParams} from \"react-router-dom\";\nimport {useCart, useProducts} from \"../utils/StoreProvider\";\nimport {addProduct} from \"../reducers/cart/cartActions\";\nimport CustomButton from \"../components/CustomButton\";\n\nconst Product = ()=> {\n    const {cartDispatch} = useCart();\n    const [loading,setLoading] = useState(true);\n    const [product,setProduct] = useState({});\n    const {productId} = useParams();\n    const {productItems} = useProducts();\n\n    useEffect(()=> {\n        setLoading(true);\n        const prod = productItems.filter(item => item.id.toString() === productId);\n        setProduct(prod[0]);\n        setLoading(false);\n    },[productId, productItems]);\n\n    return(\n        <div className='flex flex-col items-center w-full h-screen'>\n            {\n                loading ? <Loader/>\n                    :\n                    (\n                        <div className='flex flex-col items-center w-1/2 mt-20'>\n                            <h1>{product?.title}</h1>\n                            <img src={product?.image} className='w-40 h-40' />\n                            <p className='mt-4'>{product?.description}</p>\n                            <div className='flex justify-between w-full mt-6'>\n                                <p>Rating: {product?.rating?.rate}</p>\n                                <p>Price: ${product?.price}</p>\n                            </div>\n                            <CustomButton clickHandler={() => cartDispatch(addProduct(product))}>\n                                Add to Cart\n                            </CustomButton>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default Product;","const CART_ACTION_TYPE = {\n    ADD_ITEM:'ADD_ITEM',\n    REMOVE_ITEM:'REMOVE_ITEM',\n    CLEAR_ITEM:'CLEAR_ITEM',\n    CLEAR_CART:'CLEAR_CART'\n};\n\nexport default CART_ACTION_TYPE;","import CART_ACTION_TYPE from \"./cartActionTypes\";\n\nexport const addProduct = product => ({\n    type:CART_ACTION_TYPE.ADD_ITEM,\n    payload:product\n});\n\nexport const removeItem = productId => ({\n    type:CART_ACTION_TYPE.REMOVE_ITEM,\n    payload:productId\n});\n\nexport const clearItem = productId => ({\n    type:CART_ACTION_TYPE.CLEAR_ITEM,\n    payload:productId\n});\n\nexport const clearCart = () => ({\n    type:CART_ACTION_TYPE.CLEAR_CART\n});"],"names":["clickHandler","children","className","onClick","cartDispatch","useCart","useState","loading","setLoading","product","setProduct","productId","useParams","productItems","useProducts","useEffect","prod","filter","item","id","toString","title","src","image","description","rating","rate","price","addProduct","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM","CLEAR_CART","type","CART_ACTION_TYPE","payload","removeItem","clearItem","clearCart"],"sourceRoot":""}