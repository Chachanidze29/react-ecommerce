{"version":3,"file":"static/js/137.97314e92.chunk.js","mappings":"gIAQA,IANqB,SAAC,GAAD,IAAEA,EAAF,EAAEA,aAAaC,EAAf,EAAeA,SAAf,OACjB,mBAAQC,UAAU,uIACVC,QAASH,EADjB,SACgCC,M,0CCcpC,IAhBgB,SAAC,GAAD,IAAGG,EAAH,EAAGA,QAAH,OACZ,iBAAKF,UAAU,4DAAf,WACI,gBAAKG,IAAKD,EAAQE,MAAOJ,UAAU,uBAAuBK,IAAI,mBAC9D,iBAAKL,UAAU,6CAAf,WACI,uBAAIE,EAAQI,SACZ,oCAAYJ,EAAQK,UAET,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASM,UAAW,IAAK,qCAAaN,EAAQM,aAG7CC,MAAMC,KAAKC,MAAMT,EAAQK,MAAML,EAAQM,aAAc,yCAAiBE,KAAKC,MAAMT,EAAQK,MAAML,EAAQM,qB,gFC8BxH,UArCa,WACT,OAAiCI,EAAAA,EAAAA,MAA1BC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,aAEjB,OACI,iBAAKd,UAAU,8CAAf,UAEQa,EAAUE,OAAS,IACnB,SAAC,IAAD,CAAcjB,aAAc,kBAAIgB,GAAaE,EAAAA,EAAAA,QAA7C,wBAKqB,IAArBH,EAAUE,QACV,cAAGf,UAAU,QAAb,2BAEAa,EAAUI,KAAI,SAACf,GAAD,OACN,iBAAsBF,UAAU,QAAhC,WACI,SAAC,IAAD,CAA0BE,QAASA,GAArBA,EAAQgB,KACtB,iBAAKlB,UAAU,uBAAf,WACI,SAAC,IAAD,CAAcF,aAAc,kBAAMgB,GAAaK,EAAAA,EAAAA,IAAWjB,KAA1D,0BAGA,SAAC,IAAD,CAAcJ,aAAc,kBAAMgB,GAAaM,EAAAA,EAAAA,IAAWlB,EAAQgB,MAAlE,+BAGA,SAAC,IAAD,CAAcpB,aAAc,kBAAMgB,GAAaO,EAAAA,EAAAA,IAAUnB,EAAQgB,MAAjE,6BATEhB,EAAQgB,Y,6HCrB1C,IAOA,EAPyB,CACrBI,SAAS,WACTC,YAAY,cACZC,WAAW,aACXC,WAAW,cCFFN,EAAa,SAAAjB,GAAO,MAAK,CAClCwB,KAAKC,EAAAA,SACLC,QAAQ1B,IAGCkB,EAAa,SAAAS,GAAS,MAAK,CACpCH,KAAKC,EAAAA,YACLC,QAAQC,IAGCR,EAAY,SAAAQ,GAAS,MAAK,CACnCH,KAAKC,EAAAA,WACLC,QAAQC,IAGCb,EAAY,iBAAO,CAC5BU,KAAKC,EAAAA","sources":["components/CustomButton.jsx","components/Product.jsx","pages/Cart.jsx","reducers/cart/cartActionTypes.js","reducers/cart/cartActions.js"],"sourcesContent":["import React from \"react\";\n\nconst CustomButton = ({clickHandler,children}) => (\n    <button className='p-2 mt-4 text-white bg-blue-500 rounded-lg w-28 border-2 border-transparent hover:border-blue-500 hover:text-blue-500 hover:bg-white'\n            onClick={clickHandler}>{children}\n    </button>\n)\n\nexport default CustomButton;","import React from 'react'\n\nconst Product = ({ product }) => (\n    <div className='flex items-center px-2 py-4 m-2 rounded-lg cursor-pointer'>\n        <img src={product.image} className='w-40 h-40 rounded-lg' alt='Product Photo' />\n        <div className='flex flex-col justify-between w-full ml-10'>\n            <p>{product.title}</p>\n            <p>Price: ${product.price}</p>\n            {\n                product?.quantity > 0 && <p>Quantity:{product.quantity}</p>\n            }\n            {\n                !isNaN(Math.round(product.price*product.quantity)) && <p>Total Price:${Math.round(product.price*product.quantity)}</p>\n            }\n        </div>\n    </div>\n)\n\nexport default Product","import Product from '../components/Product'\nimport {useCart} from \"../utils/StoreProvider\";\nimport {addProduct, clearCart, clearItem, removeItem} from \"../reducers/cart/cartActions\";\nimport CustomButton from \"../components/CustomButton\";\n\nconst Cart = () => {\n    const {cartItems,cartDispatch} = useCart();\n\n    return (\n        <div className='flex flex-col flex-wrap items-center w-full'>\n            {\n                cartItems.length > 0 &&\n                <CustomButton clickHandler={()=>cartDispatch(clearCart())}>\n                    Clear List\n                </CustomButton>\n            }\n            {\n                cartItems.length === 0 ?\n                <p className='mt-10'>Cart is empty</p>\n                :\n                cartItems.map((product) => (\n                        <div key={product.id} className='w-1/2'>\n                            <Product key={product.id} product={product} />\n                            <div className='flex justify-between'>\n                                <CustomButton clickHandler={() => cartDispatch(addProduct(product))}>\n                                    Add to Cart\n                                </CustomButton>\n                                <CustomButton clickHandler={() => cartDispatch(removeItem(product.id))}>\n                                    Remove from cart\n                                </CustomButton>\n                                <CustomButton clickHandler={() => cartDispatch(clearItem(product.id))}>\n                                    Clear Item\n                                </CustomButton>\n                            </div>\n                        </div>\n                    )\n                )\n            }\n        </div>\n    )\n}\n\nexport default Cart","const CART_ACTION_TYPE = {\n    ADD_ITEM:'ADD_ITEM',\n    REMOVE_ITEM:'REMOVE_ITEM',\n    CLEAR_ITEM:'CLEAR_ITEM',\n    CLEAR_CART:'CLEAR_CART'\n};\n\nexport default CART_ACTION_TYPE;","import CART_ACTION_TYPE from \"./cartActionTypes\";\n\nexport const addProduct = product => ({\n    type:CART_ACTION_TYPE.ADD_ITEM,\n    payload:product\n});\n\nexport const removeItem = productId => ({\n    type:CART_ACTION_TYPE.REMOVE_ITEM,\n    payload:productId\n});\n\nexport const clearItem = productId => ({\n    type:CART_ACTION_TYPE.CLEAR_ITEM,\n    payload:productId\n});\n\nexport const clearCart = () => ({\n    type:CART_ACTION_TYPE.CLEAR_CART\n});"],"names":["clickHandler","children","className","onClick","product","src","image","alt","title","price","quantity","isNaN","Math","round","useCart","cartItems","cartDispatch","length","clearCart","map","id","addProduct","removeItem","clearItem","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM","CLEAR_CART","type","CART_ACTION_TYPE","payload","productId"],"sourceRoot":""}