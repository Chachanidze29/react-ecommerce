{"version":3,"file":"static/js/511.27616939.chunk.js","mappings":"gIAQA,IANqB,SAAC,GAAD,IAAEA,EAAF,EAAEA,aAAaC,EAAf,EAAeA,SAAf,OACjB,mBAAQC,UAAU,uIACVC,QAASH,EADjB,SACgCC,M,0CCcpC,IAhBgB,SAAC,GAAD,IAAGG,EAAH,EAAGA,QAAH,OACZ,iBAAKF,UAAU,4DAAf,WACI,gBAAKG,IAAKD,EAAQE,MAAOJ,UAAU,uBAAuBK,IAAI,mBAC9D,iBAAKL,UAAU,6CAAf,WACI,uBAAIE,EAAQI,SACZ,oCAAYJ,EAAQK,UAET,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASM,UAAW,IAAK,qCAAaN,EAAQM,aAG7CC,MAAMC,KAAKC,MAAMT,EAAQK,MAAML,EAAQM,aAAc,yCAAiBE,KAAKC,MAAMT,EAAQK,MAAML,EAAQM,qB,4GCsBxH,UA1BiB,WACb,IAAOI,GAAgBC,EAAAA,EAAAA,MAAhBD,aACAE,GAAaC,EAAAA,EAAAA,MAAbD,UACAE,GAAgBC,EAAAA,EAAAA,MAAhBD,aAEP,OACI,gBAAKhB,UAAU,yFAAf,SAEQc,GACI,SAAC,IAAD,IAEAE,EAAaE,KAAI,SAAChB,GAAD,OACb,iBAAsBF,UAAU,qEAAhC,WACI,SAAC,KAAD,CAAMA,UAAU,YAAYmB,GAAE,oBAAejB,EAAQkB,IAArD,UACI,SAAC,IAAD,CAA0BlB,QAASA,GAArBA,EAAQkB,OAE1B,SAAC,IAAD,CAActB,aAAc,kBAAMc,GAAaS,EAAAA,EAAAA,IAAWnB,KAA1D,2BAJMA,EAAQkB,W,6HCpB1C,IAOA,EAPyB,CACrBE,SAAS,WACTC,YAAY,cACZC,WAAW,aACXC,WAAW,cCFFJ,EAAa,SAAAnB,GAAO,MAAK,CAClCwB,KAAKC,EAAAA,SACLC,QAAQ1B,IAGC2B,EAAa,SAAAC,GAAS,MAAK,CACpCJ,KAAKC,EAAAA,YACLC,QAAQE,IAGCC,EAAY,SAAAD,GAAS,MAAK,CACnCJ,KAAKC,EAAAA,WACLC,QAAQE,IAGCE,EAAY,iBAAO,CAC5BN,KAAKC,EAAAA","sources":["components/CustomButton.jsx","components/Product.jsx","pages/Products.jsx","reducers/cart/cartActionTypes.js","reducers/cart/cartActions.js"],"sourcesContent":["import React from \"react\";\n\nconst CustomButton = ({clickHandler,children}) => (\n    <button className='p-2 mt-4 text-white bg-blue-500 rounded-lg w-28 border-2 border-transparent hover:border-blue-500 hover:text-blue-500 hover:bg-white'\n            onClick={clickHandler}>{children}\n    </button>\n)\n\nexport default CustomButton;","import React from 'react'\n\nconst Product = ({ product }) => (\n    <div className='flex items-center px-2 py-4 m-2 rounded-lg cursor-pointer'>\n        <img src={product.image} className='w-40 h-40 rounded-lg' alt='Product Photo' />\n        <div className='flex flex-col justify-between w-full ml-10'>\n            <p>{product.title}</p>\n            <p>Price: ${product.price}</p>\n            {\n                product?.quantity > 0 && <p>Quantity:{product.quantity}</p>\n            }\n            {\n                !isNaN(Math.round(product.price*product.quantity)) && <p>Total Price:${Math.round(product.price*product.quantity)}</p>\n            }\n        </div>\n    </div>\n)\n\nexport default Product","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport {useCart, useLoading, useProducts} from \"../utils/StoreProvider\";\nimport {addProduct} from \"../reducers/cart/cartActions\";\nimport CustomButton from \"../components/CustomButton\";\n\nconst Products = () => {\n    const {cartDispatch} = useCart();\n    const {isLoading} = useLoading();\n    const {productItems} = useProducts();\n\n    return (\n        <div className='flex max-w-screen-2xl mt-0 mb-0 ml-auto mr-auto flex-col flex-wrap items-center w-full'>\n            {\n                isLoading ?\n                    <Loader/>\n                    :\n                    productItems.map((product) =>\n                        <div key={product.id} className='flex flex-row items-center justify-between mt-10 w-3/4 items-start'>\n                            <Link className='basis-3/4' to={`/products/${product.id}`}>\n                                <Product key={product.id} product={product} />\n                            </Link>\n                            <CustomButton clickHandler={() => cartDispatch(addProduct(product))}>\n                                Add to Cart\n                            </CustomButton>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default Products","const CART_ACTION_TYPE = {\n    ADD_ITEM:'ADD_ITEM',\n    REMOVE_ITEM:'REMOVE_ITEM',\n    CLEAR_ITEM:'CLEAR_ITEM',\n    CLEAR_CART:'CLEAR_CART'\n};\n\nexport default CART_ACTION_TYPE;","import CART_ACTION_TYPE from \"./cartActionTypes\";\n\nexport const addProduct = product => ({\n    type:CART_ACTION_TYPE.ADD_ITEM,\n    payload:product\n});\n\nexport const removeItem = productId => ({\n    type:CART_ACTION_TYPE.REMOVE_ITEM,\n    payload:productId\n});\n\nexport const clearItem = productId => ({\n    type:CART_ACTION_TYPE.CLEAR_ITEM,\n    payload:productId\n});\n\nexport const clearCart = () => ({\n    type:CART_ACTION_TYPE.CLEAR_CART\n});"],"names":["clickHandler","children","className","onClick","product","src","image","alt","title","price","quantity","isNaN","Math","round","cartDispatch","useCart","isLoading","useLoading","productItems","useProducts","map","to","id","addProduct","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM","CLEAR_CART","type","CART_ACTION_TYPE","payload","removeItem","productId","clearItem","clearCart"],"sourceRoot":""}